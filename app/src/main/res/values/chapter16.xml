<?xml version="1.0" encoding="utf-8"?>
<resources>
	<string name="c16_01">如果在超市中只卖一种商品，那就会非常单一的。在上一章学习布局管理器时就有这样的感觉，都是使用按钮控件来进行举例说明，这就好像超市中只卖一种商品。在本章中就来为超市中提供更多的商品，在Swing中也就是更多的控件。控件是使界面内容丰富的一个必不可少的一部分，在Swing中的控件除了按钮之外，还包括文本框、复选框、单选按钮和菜单等很多内容。通过本章的学习，读者应该完成如下几个目标。\n了解如何创建文本框和文本框的实际应用。\n了解如何创建复选框和复选框的实际应用。\n了解如何创建单选按钮和单选按钮的实际应用。\n
	</string>
	<string name="c16_02">16.1  文本框以及密码框和多行文本框\n文本框和按钮一样，都是非常常用的控件，文本框提供了一个输入信息的控件。密码框和多行文本框是和文本框很相似的，密码框和文本框的外观是十分相似的，只是输入的内容显示为特殊符号，从而起到保护密码的作用。多行文本框从名称上就可以看出是一个具有多行文本的文本框，在多行文本框中输入内容时是可以进行换行操作的。\n
	</string>
	<string name="c16_03">16.1.1  创建文本框\n文本框是通过JTextField类来创建的，在创建的文本框中当文本超出文本框规定长度时，将自动滚动文本显示。文本框是通过JTextField类的构造器创建的，包括5种构造器，如表所示。
	</string>
	<string name="c16_04">提示：文本框也是会触发事件的，它和按钮一样，都是触发ActionEvent事件。按钮是被单击时触发事件，而文本框是当用户按下回车键时触发事件。
	</string>
	<string name="c16_05">16.1.2  创建密码框\n密码框是文本框的改进的控件，是一种专门用于输入密码的文本框。在文本框中输入信息后，将不直接显示输入的信息，而是使用特定的特殊字符来进行显示。密码框是通过JPasswordField类来创建的，因为密码框和文本框的关系，所以JPasswordField类的构造器是和JTextField类的构造器相同的。\n
	</string>
	<string name="c16_06">16.1.3  创建多行文本框\n当希望进行多行输入时，文本框就不能满足其要求，这时候就需要创建多行文本框。多行文本框也是文本框的一种特殊形式，多行文本框是通过JTextArea类实现的。JTextArea类中提供了6种构造器来创建多行文本框，构造器如表所示。\n
	</string>
	<string name="c16_07">16.2  复选框和单选按钮\n复选框和单选按钮具有很多相似的地方，它们在实际开发中也经常要使用到。例如需要用户来选择兴趣爱好时，一般都很少是只有一个爱好的，这里就可以创建复选框来实现其功能，来让用户进行多项选择操作。但是例如性别等信息，是不可能存在多个选择的，它只能在有限的几个选项中选择其中一个，这里就可以使用单选按钮。\n
	</string>
	<string name="c16_08">16.2.1  创建单选按钮\n单选按钮是一种只能在一组选项中选择其中一个选项的控件。单选按钮是通过使用JRadioButton类来创建的，在JRadioButton类中具有7种构造器形式，构造器如表所示。\n
	</string>
	<string name="c16_09">16.2.2  创建复选框\n通过JRadioButton与ButtonGroup的配合使用，可以很方便地实现单项选择。若需要使用多项选择，则应该使用复选框——JCheckBox类。与JRadioButton的不同是，JCheckBox不需要编组使用，各个选项之间没有逻辑约束关系。\n提示：通过JRadioButton与ButtonGroup的配合使用，可以很方便地实现单项选择。\n该类提供了8个构造器，表中列出了其中7个比较常用的。\n
	</string>
	<string name="c16_10">16.3  选项卡\n选项卡也是开发GUI界面常用的控件之一，通过使用选项卡可以在同一个窗体中提供很多不同的界面，可以通过选项卡提供的标签在界面间方便地进行切换。本节将为读者详细介绍如何使用Swing中的选项卡，主要包括JTabbedPane类、ChangeEvent事件以及具体案例等内容。\n
	</string>
	<string name="c16_11">16.3.1  选项卡介绍\n选项卡可以产生多个标签框架，每一个标签框架窗口自成一个系统，即包含多个页面，每个页面与一个标签对应。当选择某一个标签时，标签框架窗口会自动显示出此标签框架的内容，并触发一个ChangeEvent事件，这个事件由ChangeListener监听器监听并处理。\n注意：每次只能选择标签组的一个标签。\n选项卡具有以下构造方法及常用方法。\npublic JTabbedPane()方法：该方法创建一个TabbedPane对象，该对象具有默认的JTabbedPane.TOP选项卡布局。\npublic JTabbedPane(int tabPlacement)方法：该方法使用指定的参数tabPlacement创建一个TabbedPane对象，tabPlacement参数有常值，JTabbedPane.TOP、JTabbedPane.BOTTOM、JTabbedPane.LEFT或JTabbedPane.RIGHT。\npublic JTabbedPane(int tabPlacement, int tabLayoutPolicy)方法：该方法以指定的参数tabPlacement、tabLayoutPolicy创建一个TabbedPane对象，该对象具有指定的tabPlacement选项卡布局和tabLayoutPolicy选项卡布局策略。其中参数tabLayoutPolicy有常值，JTabbedPane.WRAP_TAB_LAYOUT、JTabbedPane.SCROLL_TAB_LAYOUT。\n
	</string>
	<string name="c16_12">16.3.2  创建选项卡\n学习了JTabbedPane类的构造器和相关方法就可以来创建选项卡。选项卡的创建和前面控件的创建都是很类似的。\n【范例】示例代码是一个创建选项卡的程序。\n
	</string>
	<string name="c16_13">16.4  分割窗格\n分割窗格（JSplitPane）也是Swing中常用的控件之一，其能够将单个空间分割成两个部分，并在两个部分中显示不同的内容，本节将为读者详细介绍JSplitPane类的相关知识与使用。\n
	</string>
	<string name="c16_14">16.4.1  分割窗格介绍\nJSplitPane控件允许在单个空间中放置两个控件，开发人员可以自由决定按水平方向或垂直方向划分空间，还可以在程序运行期间使用鼠标自由调整空间的分割比例。通过JSplitPane控件的嵌套使用，可以将空间分割成更多的部分。JSplitPane类提供了5个构造器，如表所示。\n
	</string>
	<string name="c16_15">16.4.2  创建分割窗格\n通过上一小节的介绍，对JSplitPane控件有了大体的了解，其能够将窗格分割成两个部分，且只能是两个部分，但是可以通过嵌套使用的方式将窗格分割成任意多份。本小节将给出一个嵌套使用JSplitPane控件的例子，进一步加深读者对该控件的理解。\n【范例】示例代码是一个创建分割窗格的程序。\n
	</string>
	<string name="c16_16">16.5  滑块和进度条\n很多GUI应用程序中都通过滑块来让用户进行指定范围值的输入，这样很方便，而且用户也不再可能输入错误的数值，使界面变得很友好。通过进度条系统能够向用户即时反馈一些信息，避免用户不知道系统处于何种状态而焦急的等待。本节将向读者介绍如何使用Swing中提供的滑块与进度条，通过本节的学习，读者也可以方便地开发出使用滑块与进度条的应用。\n
	</string>
	<string name="c16_17">16.5.1  创建滑块\nJSlider类是Swing包中提供的用于实现滑块的控件，通过JSlider控件可以让用户在限定的范围内方便地选择需要的值。JSlider类提供的滑块可以是水平方向的，也可以是垂直方向的，并且可以根据需要设置成为不同的外观风格。\n提示：滑块组件是由可以拖动的滑块和一个范围组件组成的；用户可以通过拖动滑块在一个区间范围里进行选择。\nJSlider ageSlider = new JSlider();\nageSlider = new JSlider(SwingConstants.VERTICAL,0,120,20);\n
	</string>
	<string name="c16_18">16.5.2  创建进度条\nJProgressBar是Swing中提供的用来实现进度条的控件，使用其可以非常方便地完成进度条的开发。在应用中恰当使用进度条可以即时通告用户系统的一些信息，避免用户因不知道系统运行情况而焦急地等待，从而使界面更加友好。\n注意：Swing中提供的进度条不但可以像常见的进度条一样显示工作的进度，而且可以通过设置为模糊模式以动画形式来表示系统正在运行。\nJProgressBar类提供了5个构造器，其中有4个是比较常用的，表列出了这4个常用的构造器。\n
	</string>
	<string name="c16_19">16.5.1  创建滑块\nJSlider类是Swing包中提供的用于实现滑块的控件，通过JSlider控件可以让用户在限定的范围内方便地选择需要的值。JSlider类提供的滑块可以是水平方向的，也可以是垂直方向的，并且可以根据需要设置成为不同的外观风格。\n提示：滑块组件是由可以拖动的滑块和一个范围组件组成的；用户可以通过拖动滑块在一个区间范围里进行选择。\nJSlider ageSlider = new JSlider();\nageSlider = new JSlider(SwingConstants.VERTICAL,0,120,20);\n
	</string>
	<string name="c16_20">16.6.1  列表框介绍\nJList能够为用户提供一组可供选择的选项，这些选项可以以一列或多列的形式显示。默认的选择模式下，可以通过鼠标单击来选择单个选项，也可以在按住特定控制键的同时，单击鼠标来进行多项选择。\n注意：JList类没有提供滚动功能，但是可以通过将其放置在JScrollPane中来实现滚动操作。\nJList的常用构造方法如下所示：\npublic JList()方法：该方法可以构造一个使用空模型的JList对象。\npublic JList(Object[] listData)方法：该方法以显示指定数组中的元素构造一个JList。\n
	</string>
	<string name="c16_21">16.6.2  创建列表框\n通过对JList类构造器的学习，就可以使用JList类构造器来创建列表框。在本节中就来使用JList类来创建一个列表框，同时为该列表框注册事件监听器。\n【范例】示例代码是创建列表框的程序。\n
	</string>
	<string name="c16_22">16.6.3  下拉列表框\n下拉列表及组合框，下拉列表与列表不同的是，下拉列表只支持单个选项，只允许用户选择一个选项。优点是能节省空间，使界面更紧凑。并且只有用户单击下拉列表时，列表选项才会显示。\n注意：在默认的情况下，下拉列表是不可以被用户编辑的，但是可以使用JComboBox提供的方法setEditable方法使其可以被编辑。\nJComboBox控件实际上组合了一个文本框与一个下拉列表，在默认情况下JComboBox控件提供的文本框是不可编辑的。在文本框旁边有一个包含向下箭头的小按扭，在按下这个按扭之后，会出现显示选项的弹出式列表，用户可以从其中选择需要的选项。\n
	</string>
	<string name="c16_23">16.7  菜单\n随着GUI开发的普及，菜单在开发中也变的越来越重要，几乎每个应用程序都会提供相应的菜单。因此，Swing为菜单的开发提供了良好的支持，通过Swing中提供的菜单系列控件，开发人员可以非常方便地开发出各种各样的菜单，本节将对Swing中菜单的开发进行详细的介绍。\n
	</string>
	<string name="c16_24">16.7.1  菜单介绍\n菜单（JMenu）是标题栏下面的一行文字部分。菜单是应用程序中最常用的组件。菜单的组织方式为：一个菜单条JMenuBar包含多个菜单项（JMenuItem）。JMenuItem有两个子类，分别为JRadioButtonMenuItem及JCheckBoxMenuItem用于表示单选菜单项和复选菜单项。当用户选择某个菜单项后，就会触发一个ActionEvent时间，由ActionListener监听器处理。\n菜单项有两种状态：启用状态和禁用状态，菜单项的状态可以使用setEnabled()方法设置。创建完整的菜单一般需要以下几步：\n创建菜单栏\n创建菜单以及子菜单\n创建菜单项\n将菜单项加入到子菜单或菜单中，将子菜单加入到菜单中，将菜单加入到菜单栏中\n
	</string>
	<string name="c16_25">16.7.2  创建菜单\n在上一小节对菜单进行了简单的介绍，在本节中就来先创建一个简单的菜单，然后再对菜单进行更详细的讲解。\n【范例】示例代码是一个创建菜单的程序。\n
	</string>
	<string name="c16_26">16.7.3  创建弹出式菜单\n弹出式菜单有时也称为右键菜单，其一般在用户按下鼠标右键时在鼠标位置弹出，能够给用户的操作提供更大的方便。从某种程度上来说，右键菜单设计的好坏直接影响应用程序的易用性，本节将对Swing中弹出式菜单的开发进行详细的介绍。\n注意：JPopupMenu类实现弹出菜单。JPopupMenu类不是继承JMenu类的而是从JComponent类继承过来。弹出式菜单的创建和菜单的创建基本相同，也需要新建一个弹出式菜单后再加入菜单项。\n通过调用JPopupMenu类提供的show方法可以将弹出式菜单显示在指定控件的指定位置，下面的代码片段说明了如何显示弹出式菜单。\n
//测试鼠标事件是否应该触发弹出式菜单\n
if(jpm.isPopupTrigger(e))\n
{//显示弹出式菜单\n
\t\tjpm.show(this,e.getX(),e.getY());\n
}\n
	</string>
	<string name="c16_27">16.8  小结\n在本章中对Swing中的常用控件进行了讲解，包括文本框、复选框、单选按钮、选项卡、分割窗格、滑块、滚动条、列表框和菜单。Swing中的控件除了这些外，还有很多控件，但是这些控件都是不常用的。\n
	</string>
</resources>